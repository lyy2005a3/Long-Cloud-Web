name: Pre Release Build

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*-*"
  workflow_dispatch:
    inputs:
      draft:
        description: "Create draft release"
        required: false
        default: true
        type: boolean

jobs:
  pre-release:
    name: Pre Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Build Pre-release
        run: |
          chmod +x build.sh
          ./build.sh --dev --compress
        env:
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

      - name: Read version and determine tag name
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "tag_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            version=$(cat dist/VERSION)
            echo "version=$version" >> $GITHUB_OUTPUT
            echo "tag_name=rolling" >> $GITHUB_OUTPUT
          fi

      - name: Remove the existing pre-release
        run: gh release delete ${{ steps.version.outputs.tag_name }} --cleanup-tag --yes || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish pre-release on GitHub
        run: |
          gh release create \
            --title "Pre-release ${{ steps.version.outputs.version }}" \
            --notes "Pre-release build for ${{ steps.version.outputs.version }}<br>This is a development build and not intended for production use." \
            --prerelease \
            --draft=${{ github.event_name == 'workflow_dispatch' && inputs.draft || false }} \
            ${{ steps.version.outputs.tag_name }} \
            dist/Long-Cloud-dist-v*-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write