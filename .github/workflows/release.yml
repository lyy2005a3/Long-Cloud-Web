name: Release Build

on:
  push:
    tags:
      - "v*.*.*"
      - "!v*.*.*-*"
  workflow_dispatch:
    inputs:
      draft:
        description: "Create draft release"
        required: false
        default: true
        type: boolean
      version:
        description: "Version tag (for manual trigger, e.g., v1.0.0)"
        required: false
        type: string

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Setup version for manual trigger
        if: github.event_name == 'workflow_dispatch' && inputs.version
        run: |
          git tag ${{ inputs.version }}
          echo "Created temporary tag: ${{ inputs.version }}"

      - name: Generate changelog
        run: |
          # Remove existing tag `rolling`, since `rolling` should always point to the latest commit
          # This is necessary to avoid conflicts with the changelog generation
          git tag -d rolling || true

          # Temporarily remove all pre-release tags (tags containing '-')
          # This prevents them from interfering with changelog generation
          PRE_RELEASE_TAGS=$(git tag -l | grep '-|+' || true)
          if [ -n "$PRE_RELEASE_TAGS" ]; then
            echo "Temporarily removing pre-release tags: $PRE_RELEASE_TAGS"
            echo "$PRE_RELEASE_TAGS" | xargs -r git tag -d
          fi

          npx changelogithub --output ${{ github.workspace }}-CHANGELOG.txt

      - name: Build Release
        run: |
          chmod +x build.sh
          ./build.sh --release --compress
        env:
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

      - name: Publish npm
        if: ${{ !(github.event_name == 'workflow_dispatch' && inputs.draft) }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "NPM_TOKEN not set, do dry run"
            pnpm publish --dry-run --no-git-checks --access public
          else
            pnpm publish --no-git-checks --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Read version from dist/VERSION
        id: version
        run: echo "tag_name=$(cat dist/VERSION)" >> $GITHUB_OUTPUT

      - name: Upload Release Assets
        run: |
          gh release edit \
            --title "Release ${{ steps.version.outputs.tag_name }}" \
            --notes-file "${{ github.workspace }}-CHANGELOG.txt" \
            --draft=${{ github.event_name == 'workflow_dispatch' && inputs.draft || false }} \
            ${{ steps.version.outputs.tag_name }} \
            dist/Long-Cloud-dist-v*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write